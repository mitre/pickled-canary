; This pattern tests for the absence of CVE-2015-3145 and its fix for x86:LE:64:default.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; CVE-2015-3145 was introduced in v7.31.0 when the sanitize_cookie_path() function was added in
; cookie.c and when the spath field was added in the Cookie struct in cookie.h. Even though the
; vulnerability itself is located in sanitize_cookie_path(), we can check whether the vulnerability
; had been introduced yet by checking for the presence (or lack of) the spath field.

; The cookie.c file contains a freecookie() function which frees several values in the Cookie
; struct. We can check how many times free is called - eight times before spath was added, nine
; times after spath was added.

; Prevulnerable code:
; // notice co->spath is missing, as it has not been introduced to the code yet
; static void freecookie(struct Cookie *co)
; {
;   if(co->expirestr)
;     free(co->expirestr);
;   if(co->domain)
;     free(co->domain);
;   if(co->path)
;     free(co->path);
;   if(co->name)
;     free(co->name);
;   if(co->value)
;     free(co->value);
;   if(co->maxage)
;     free(co->maxage);
;   if(co->version)
;     free(co->version);
;
;   free(co);
; }

; Pattern written with: libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4_OceanStor BCManager V200R001C00SPC220__1.action.16f41eb05d826e68ec793247c65ede64ce2ff854e2409379e438e8fe3b18bb24
;        0010cc40 55              PUSH       RBP
;        0010cc41 53              PUSH       RBX
;        0010cc42 48 89 fb        MOV        RBX,RDI
;        0010cc45 48 83 ec 08     SUB        RSP,0x8
;        0010cc49 48 8b 7f 30     MOV        RDI,qword ptr [RDI + 0x30]
;        0010cc4d 48 85 ff        TEST       RDI,RDI
;        0010cc50 74 71           JZ         LAB_0010ccc3
;        0010cc52 48 8b 2d        MOV        RBP,qword ptr [PTR_PTR_free_0025f8f0]
;                 97 2c 15 00
;        0010cc59 ff 55 00        CALL       qword ptr [RBP]=>-><EXTERNAL>::free
;                             LAB_0010cc5c
;        0010cc5c 48 8b 7b 20     MOV        RDI,qword ptr [RBX + 0x20]
;        0010cc60 48 85 ff        TEST       RDI,RDI
;        0010cc63 74 03           JZ         LAB_0010cc68
;        0010cc65 ff 55 00        CALL       qword ptr [RBP]=>-><EXTERNAL>::free
;                             LAB_0010cc68
;        0010cc68 48 8b 7b 18     MOV        RDI,qword ptr [RBX + 0x18]
;        0010cc6c 48 85 ff        TEST       RDI,RDI
;        0010cc6f 90              NOP
;        0010cc70 74 03           JZ         LAB_0010cc75
;        0010cc72 ff 55 00        CALL       qword ptr [RBP]=>-><EXTERNAL>::free
;                             LAB_0010cc75
;        0010cc75 48 8b 7b 08     MOV        RDI,qword ptr [RBX + 0x8]
;        0010cc79 48 85 ff        TEST       RDI,RDI
;        0010cc7c 74 05           JZ         LAB_0010cc83
;        0010cc7e 66 90           NOP
;        0010cc80 ff 55 00        CALL       qword ptr [RBP]=>-><EXTERNAL>::free
;                             LAB_0010cc83
;        0010cc83 48 8b 7b 10     MOV        RDI,qword ptr [RBX + 0x10]
;        0010cc87 48 85 ff        TEST       RDI,RDI
;        0010cc8a 74 07           JZ         LAB_0010cc93
;        0010cc8c 66 66 66 90     NOP
;        0010cc90 ff 55 00        CALL       qword ptr [RBP]=>-><EXTERNAL>::free
;                             LAB_0010cc93
;        0010cc93 48 8b 7b 48     MOV        RDI,qword ptr [RBX + 0x48]
;        0010cc97 48 85 ff        TEST       RDI,RDI
;        0010cc9a 74 07           JZ         LAB_0010cca3
;        0010cc9c 66 66 66 90     NOP
;        0010cca0 ff 55 00        CALL       qword ptr [RBP]=>-><EXTERNAL>::free
;                             LAB_0010cca3
;        0010cca3 48 8b 7b 40     MOV        RDI,qword ptr [RBX + 0x40]
;        0010cca7 48 85 ff        TEST       RDI,RDI
;        0010ccaa 74 07           JZ         LAB_0010ccb3
;        0010ccac 66 66 66 90     NOP
;        0010ccb0 ff 55 00        CALL       qword ptr [RBP]=>-><EXTERNAL>::free
;                             LAB_0010ccb3
;        0010ccb3 4c 8b 5d 00     MOV        R11,qword ptr [RBP]=>-><EXTERNAL>::free
;        0010ccb7 48 89 df        MOV        RDI,RBX
;        0010ccba 48 83 c4 08     ADD        RSP,0x8
;        0010ccbe 5b              POP        RBX
;        0010ccbf 5d              POP        RBP
;        0010ccc0 41 ff e3        JMP        R11=><EXTERNAL>::free

; start of freecookie() function
PUSH RBP
`ANY_BYTES{0,24}`

`START_OR`

    JZ `*`
    `ANY_BYTES{0,8}`
    CALL qword ptr [`Q2/R..`]
    `ANY_BYTES{0,10}`

    JZ `*`
    `ANY_BYTES{0,4}`
    CALL qword ptr [`Q2`]
    `ANY_BYTES{0,10}`

    JZ `*`
    `ANY_BYTES{0,4}`
    CALL qword ptr [`Q2`]
    `ANY_BYTES{0,10}`

    JZ `*`
    `ANY_BYTES{0,4}`
    CALL qword ptr [`Q2`]
    `ANY_BYTES{0,10}`

    JZ `*`
    `ANY_BYTES{0,4}`
    CALL qword ptr [`Q2`]
    `ANY_BYTES{0,10}`

    JZ `*`
    `ANY_BYTES{0,4}`
    CALL qword ptr [`Q2`]
    `ANY_BYTES{0,10}`

    JZ `*`
    `ANY_BYTES{0,4}`
    CALL qword ptr [`Q2`]
    `ANY_BYTES{0,16}`

    POP RBP
`OR`
    JZ `*`
    `ANY_BYTES{0,20}`
    CALL `Q3/R..`
    `ANY_BYTES{0,12}`

    JZ `*`
    `ANY_BYTES{0,20}`
    CALL `Q3`
    `ANY_BYTES{0,12}`

    JZ `*`
    `ANY_BYTES{0,20}`
    CALL `Q3`
    `ANY_BYTES{0,12}`

    JZ `*`
    `ANY_BYTES{0,20}`
    CALL `Q3`
    `ANY_BYTES{0,12}`

    JZ `*`
    `ANY_BYTES{0,20}`
    CALL `Q3`
    `ANY_BYTES{0,12}`

    JZ `*`
    `ANY_BYTES{0,20}`
    CALL `Q3`
    `ANY_BYTES{0,12}`

    JZ `*`
    `ANY_BYTES{0,20}`
    CALL `Q3`
    `ANY_BYTES{0,16}`

    CALL `Q4/R..`
`END_OR`

; Copyright (C) 2023 The MITRE Corporation All Rights Reserved
