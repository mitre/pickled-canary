; This pattern tests for the absence of CVE-2015-3145 and its fix for MIPS:BE:32:default.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; CVE-2015-3145 was introduced in v7.31.0 when the sanitize_cookie_path() function was added in
; cookie.c and when the spath field was added in the Cookie struct in cookie.h. Even though the
; vulnerability itself is located in sanitize_cookie_path(), we can check whether the vulnerability
; had been introduced yet by checking for the presence (or lack of) the spath field.

; The cookie.c file contains a freecookie() function which frees several values in the Cookie
; struct. We can check how many times free is called - eight times before spath was added, nine
; times after spath was added.

; Prevulnerable code:
; // notice co->spath is missing, as it has not been introduced to the code yet
; static void freecookie(struct Cookie *co)
; {
;   if(co->expirestr)
;     free(co->expirestr);
;   if(co->domain)
;     free(co->domain);
;   if(co->path)
;     free(co->path);
;   if(co->name)
;     free(co->name);
;   if(co->value)
;     free(co->value);
;   if(co->maxage)
;     free(co->maxage);
;   if(co->version)
;     free(co->version);
;
;   free(co);
; }

; Pattern written with: libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.2.0_3.0.0.4.382.51641_Global.zip.758ee8d698d13e63f8ed9acdf7b21d728e2a9cb0cb2837dbd307babff428e9ab_1
;        000199b0 05 00 1c 3c     lui        gp,0x5
; ...
;        000199dc 45 00 80 10     beq        a0,zero,LAB_00019af4
;        000199e0 00 00 00 00     _nop
;        000199e4 ec 80 91 8f     lw         s1,-0x7f14(gp)=>->Curl_cfree                     = 00065524
;        000199e8 00 00 00 00     nop
;        000199ec 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        000199f0 00 00 00 00     nop
;        000199f4 09 f8 20 03     jalr       t9=><EXTERNAL>::free                             void free(void * __ptr)
;        000199f8 00 00 00 00     _nop
;        000199fc 10 00 bc 8f     lw         gp,local_18(sp)
;                             LAB_00019a00                                    XREF[1]:     00019af8(j)
;        00019a00 10 00 04 8e     lw         a0,0x10(s0)
;        00019a04 00 00 00 00     nop
;        00019a08 06 00 80 10     beq        a0,zero,LAB_00019a24
;        00019a0c 00 00 00 00     _nop
;        00019a10 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        00019a14 00 00 00 00     nop
;        00019a18 09 f8 20 03     jalr       t9=><EXTERNAL>::free                             void free(void * __ptr)
;        00019a1c 00 00 00 00     _nop
;        00019a20 10 00 bc 8f     lw         gp,local_18(sp)
;                             LAB_00019a24                                    XREF[1]:     00019a08(j)
;        00019a24 0c 00 04 8e     lw         a0,0xc(s0)
;        00019a28 00 00 00 00     nop
;        00019a2c 06 00 80 10     beq        a0,zero,LAB_00019a48
;        00019a30 00 00 00 00     _nop
;        00019a34 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        00019a38 00 00 00 00     nop
;        00019a3c 09 f8 20 03     jalr       t9=><EXTERNAL>::free                             void free(void * __ptr)
;        00019a40 00 00 00 00     _nop
;        00019a44 10 00 bc 8f     lw         gp,local_18(sp)
;                             LAB_00019a48                                    XREF[1]:     00019a2c(j)
;        00019a48 04 00 04 8e     lw         a0,0x4(s0)
;        00019a4c 00 00 00 00     nop
;        00019a50 06 00 80 10     beq        a0,zero,LAB_00019a6c
;        00019a54 00 00 00 00     _nop
;        00019a58 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        00019a5c 00 00 00 00     nop
;        00019a60 09 f8 20 03     jalr       t9=><EXTERNAL>::free                             void free(void * __ptr)
;        00019a64 00 00 00 00     _nop
;        00019a68 10 00 bc 8f     lw         gp,local_18(sp)
;                             LAB_00019a6c                                    XREF[1]:     00019a50(j)
;        00019a6c 08 00 04 8e     lw         a0,0x8(s0)
;        00019a70 00 00 00 00     nop
;        00019a74 06 00 80 10     beq        a0,zero,LAB_00019a90
;        00019a78 00 00 00 00     _nop
;        00019a7c 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        00019a80 00 00 00 00     nop
;        00019a84 09 f8 20 03     jalr       t9=><EXTERNAL>::free                             void free(void * __ptr)
;        00019a88 00 00 00 00     _nop
;        00019a8c 10 00 bc 8f     lw         gp,local_18(sp)
;                             LAB_00019a90                                    XREF[1]:     00019a74(j)
;        00019a90 2c 00 04 8e     lw         a0,0x2c(s0)
;        00019a94 00 00 00 00     nop
;        00019a98 06 00 80 10     beq        a0,zero,LAB_00019ab4
;        00019a9c 00 00 00 00     _nop
;        00019aa0 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        00019aa4 00 00 00 00     nop
;        00019aa8 09 f8 20 03     jalr       t9=><EXTERNAL>::free                             void free(void * __ptr)
;        00019aac 00 00 00 00     _nop
;        00019ab0 10 00 bc 8f     lw         gp,local_18(sp)
;                             LAB_00019ab4                                    XREF[1]:     00019a98(j)
;        00019ab4 28 00 04 8e     lw         a0,0x28(s0)
;        00019ab8 00 00 00 00     nop
;        00019abc 06 00 80 10     beq        a0,zero,LAB_00019ad8
;        00019ac0 00 00 00 00     _nop
;        00019ac4 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        00019ac8 00 00 00 00     nop
;        00019acc 09 f8 20 03     jalr       t9=><EXTERNAL>::free                             void free(void * __ptr)
;        00019ad0 00 00 00 00     _nop
;        00019ad4 10 00 bc 8f     lw         gp,local_18(sp)
;                             LAB_00019ad8                                    XREF[1]:     00019abc(j)
;        00019ad8 00 00 39 8e     lw         t9,0x0(s1)=>-><EXTERNAL>::free                   = 00066000
;        00019adc 21 20 00 02     move       a0,s0
;        00019ae0 20 00 bf 8f     lw         ra,local_8(sp)
;        00019ae4 1c 00 b1 8f     lw         s1,local_c(sp)
;        00019ae8 18 00 b0 8f     lw         s0,local_10(sp)
;        00019aec 08 00 20 03     jr         t9=><EXTERNAL>::free                             void free(void * __ptr)


; start of freecookie() function
lui gp,`*`

`ANY_BYTES{0,48}`

; each jalr calls free

`START_OR`
    beq a0,zero,`*`
`OR`
    beql a0,zero,`*`
`END_OR`
`ANY_BYTES{0,28}`
jalr `*`
`ANY_BYTES{0,24}`

`START_OR`
    beq a0,zero,`*`
`OR`
    beql a0,zero,`*`
`END_OR`
`ANY_BYTES{0,28}`
jalr `*`
`ANY_BYTES{0,24}`

`START_OR`
    beq a0,zero,`*`
`OR`
    beql a0,zero,`*`
`END_OR`
`ANY_BYTES{0,28}`
jalr `*`
`ANY_BYTES{0,24}`

`START_OR`
    beq a0,zero,`*`
`OR`
    beql a0,zero,`*`
`END_OR`
`ANY_BYTES{0,28}`
jalr `*`
`ANY_BYTES{0,24}`

`START_OR`
    beq a0,zero,`*`
`OR`
    beql a0,zero,`*`
`END_OR`
`ANY_BYTES{0,28}`
jalr `*`
`ANY_BYTES{0,24}`

`START_OR`
    beq a0,zero,`*`
`OR`
    beql a0,zero,`*`
`END_OR`
`ANY_BYTES{0,28}`
jalr `*`
`ANY_BYTES{0,24}`

`START_OR`
    beq a0,zero,`*`
`OR`
    beql a0,zero,`*`
`END_OR`
`ANY_BYTES{0,28}`
jalr `*`
`ANY_BYTES{0,36}`

jr `*`

; Copyright (C) 2025 The MITRE Corporation All Rights Reserved
