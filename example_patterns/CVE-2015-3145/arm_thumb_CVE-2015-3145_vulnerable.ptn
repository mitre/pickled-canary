; This pattern tests for the presence of CVE-2015-3145 for ARM:LE:32:v8 thumb.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; Vulnerable code:
; if(new_path[0] == '\"') {
;   memmove((void *)new_path, (const void *)(new_path + 1), strlen(new_path));
; }
; if(new_path[strlen(new_path) - 1] == '\"') { // (strlen(new_path) - 1) could be negative
;   new_path[strlen(new_path) - 1] = 0x0;
; }

; Pattern written with: libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.3.0_V5.21(AATB.3)C0.zip.cc7fafcf1330ad57be6c4f5ce3437f1fa25cac35c26fbf92f7c0ae6344865511
;        0001834e 03 78           ldrb       r3,[r0,#0x0]
;        00018350 22 2b           cmp        r3,#0x22
;        00018352 06 d1           bne        LAB_00018362
;        00018354 fc f7 da ee     blx        <EXTERNAL>::strlen
;        00018358 61 1c           adds       r1,r4,#0x1
;        0001835a 02 46           mov        r2,r0
;        0001835c 20 46           mov        r0,r4
;        0001835e fc f7 02 ec     blx        <EXTERNAL>::memmove
;                             LAB_00018362
;        00018362 20 46           mov        r0,r4
;        00018364 fc f7 d2 ee     blx        <EXTERNAL>::strlen
;        00018368 01 38           subs       r0,#0x1
;        0001836a 23 5c           ldrb       r3,[r4,r0]
;        0001836c 22 2b           cmp        r3,#0x22
;        0001836e 04 bf           itt        eq
;        00018370 00 23           mov.eq     r3,#0x0

; new_path[0] == '\"'
ldrb `Q1/r..?`,[`Q2/r..?`,#0x0]
cmp `Q1`,#0x22

bne `*`

; call strlen
blx `*`

; call memmove
adds r1,`Q3/r..?`,#0x1
mov r2,r0
mov r0,r4
blx `*`

`ANY_BYTES{0,4}`

; call strlen
blx `*`

; calculate (strlen - 1)
subs r0,#0x1

; new_path[strlen(new_path) - 1] == '\"'
ldrb `Q4/r..?`,[`Q3`,r0]
cmp `Q4`,#0x22

;`ANY_BYTES{0,4}`

; put 0 in new_path[strlen(new_path) - 1] if above true
;mov.eq `Q4`,#0x0


; Copyright (C) 2025 The MITRE Corporation All Rights Reserved
