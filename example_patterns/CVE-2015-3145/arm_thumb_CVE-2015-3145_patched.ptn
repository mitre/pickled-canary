; This pattern tests for the patch of CVE-2015-3145 for ARM:LE:32:default thumb.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; Patched code:
; len = strlen(new_path);
; if(new_path[0] == '\"') {
;   memmove((void *)new_path, (const void *)(new_path + 1), len);
;   len--;
; }
; if(len && (new_path[len - 1] == '\"')) {
;   new_path[len - 1] = 0x0;
;   len--;
; }

; Pattern written with: libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.3.0_4.3.3.0998 build 20190730.zip.1784ba2d9115ffed3202a9f612afee23ce50103c8056fae182640fe85a3cb15f
;        00019bf4 fc f7 0a ea     blx        <EXTERNAL>::strlen
;        00019bf8 23 78           ldrb       r3,[r4,#0x0]
;        00019bfa 06 46           mov        r6,r0
;        00019bfc 22 2b           cmp        r3,#0x22
;        00019bfe 18 d0           beq        LAB_00019c32
;        00019c00 fe b1           cbz        r6,LAB_00019c42
;                             LAB_00019c02
;        00019c02 73 1e           subs       r3,r6,#0x1
;        00019c04 e2 5c           ldrb       r2,[r4,r3]
;        00019c06 22 2a           cmp        r2,#0x22
;        00019c08 04 d0           beq        LAB_00019c14
; ...
;                              LAB_00019c14
;        00019c14 00 22           movs       r2,#0x0
; ...
;                              LAB_00019c32
;        00019c32 46 1e           subs       r6,r0,#0x1
;        00019c34 02 46           mov        r2,r0
;        00019c36 61 1c           adds       r1,r4,#0x1
;        00019c38 20 46           mov        r0,r4
;        00019c3a fc f7 3e ec     blx        <EXTERNAL>::memmove
;        00019c3e 00 2e           cmp        r6,#0x0
;        00019c40 df d1           bne        LAB_00019c02

; call to strlen
blx `*`

; new_path[0] == '\"'
ldrb `Q1/r..?`,[`Q2/r..?`,#0x0]
`ANY_BYTES{0,4}`
cmp `Q1`,#0x22

`ANY_BYTES{0,8}`

; len--
subs `Q3/r..?`,`Q4/r..?`,#0x1

; new_path[strlen(new_path) - 1] == '\"'
ldrb `Q5/r..?`,[`Q2`,`Q3`]
cmp `Q5`,#0x22

`ANY_BYTES{12,16}`

; put 0 in new_path[strlen(new_path) - 1] if above true
movs `Q5`,#0x0

`ANY_BYTES{28,32}`

; len--
subs `Q6/r..?`,`Q7/r..?`,#0x1

; call memmove
mov r2,`Q7`
adds r1,`Q2`,#0x1
mov r0,`Q2`
blx `*`

; check whether len is 0
cmp `Q6`,#0x0

; Copyright (C) 2025 The MITRE Corporation All Rights Reserved
