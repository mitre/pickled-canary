; This pattern tests for the patch of CVE-2015-3145 for ARM:LE:32:default.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; Patched code:
; len = strlen(new_path);
; if(new_path[0] == '\"') {
;   memmove((void *)new_path, (const void *)(new_path + 1), len);
;   len--;
; }
; if(len && (new_path[len - 1] == '\"')) {
;   new_path[len - 1] = 0x0;
;   len--;
; }

; Pattern written with: 1) libcurl/libcurl_versions/from_tool/testdata/libcurl.so.5.3.0_2.1.11.197735.img.63600c6c1e5c8fed935fb61e7b3b3049cc49a2214514cd8bf3e8769e76de9b44
;        0001a368 85 ee ff eb     bl         <EXTERNAL>::strlen
;        0001a36c 00 30 d4 e5     ldrb       r3,[r4,#0x0]
;        0001a370 05 70 a0 e1     cpy        r7,r5
;        0001a374 22 00 53 e3     cmp        r3,#0x22
;        0001a378 00 50 a0 e1     cpy        r5,r0
;        0001a37c 04 00 00 1a     bne        LAB_0001a394
;        0001a380 05 20 a0 e1     cpy        r2,r5
;        0001a384 04 00 a0 e1     cpy        r0,r4
;        0001a388 01 10 84 e2     add        r1,r4,#0x1
;        0001a38c 01 50 45 e2     sub        r5,r5,#0x1
;        0001a390 51 eb ff eb     bl         <EXTERNAL>::memmove
;                             LAB_0001a394
;        0001a394 00 00 55 e3     cmp        r5,#0x0
;        0001a398 05 00 00 0a     beq        LAB_0001a3b4
;        0001a39c 01 30 45 e2     sub        r3,r5,#0x1
;        0001a3a0 03 20 d4 e7     ldrb       r2,[r4,r3]
;        0001a3a4 22 00 52 e3     cmp        r2,#0x22
;        0001a3a8 03 50 a0 01     cpyeq      r5,r3
;        0001a3ac 00 20 a0 03     moveq      r2,#0x0
;        0001a3b0 03 20 c4 07     strbeq     r2,[r4,r3]

; and 2) libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.5.0_5.50(ABIN.3)C0.zip.0e3ecd4760ac68d681185b8918cbc39b6de628ab63103f1e0ce7bc88757f8a8a
;        0001a064 e6 eb ff eb     bl         <EXTERNAL>::strlen
;        0001a068 d0 30 d5 e1     ldrsb      r3,[r5,#0x0]
;        0001a06c 00 60 a0 e1     cpy        r6,r0
;        0001a070 22 00 53 e3     cmp        r3,#0x22
;        0001a074 23 00 00 0a     beq        LAB_0001a108
;                             LAB_0001a078
;        0001a078 00 00 56 e3     cmp        r6,#0x0
;        0001a07c 0b 00 00 1a     bne        LAB_0001a0b0
; ...
;                              LAB_0001a0b0
;        0001a0b0 01 30 46 e2     sub        r3,r6,#0x1
;        0001a0b4 d3 20 95 e1     ldrsb      r2,[r5,r3]
;        0001a0b8 22 00 52 e3     cmp        r2,#0x22
;        0001a0bc 00 20 a0 03     moveq      r2,#0x0
; ...
;
;                             LAB_0001a108
;        0001a108 00 20 a0 e1     cpy        r2,r0
;        0001a10c 01 60 40 e2     sub        r6,r0,#0x1
;        0001a110 01 10 85 e2     add        r1,r5,#0x1
;        0001a114 05 00 a0 e1     cpy        r0,r5
;        0001a118 46 ec ff eb     bl         <EXTERNAL>::memmove

; call to strlen
bl `*`

`START_OR`
    ; new_path[0] == '\"'
    ldrb `Q1/r..?`,[`Q2/r..?`,#0x0]
    `ANY_BYTES{0,8}`
    cmp `Q1`,#0x22

    `ANY_BYTES{0,8}`

    ; call memmove and len--
    `START_OR`
        cpy r2,`Q3/r..?`
        `START_OR`
            `START_OR`
                cpy r0,`Q2`
                add r1,`Q2`,#0x1
            `OR`
                add r1,`Q2`,#0x1
                cpy r0,`Q2`
            `END_OR`
            sub `Q4/r..?`,`Q5/r..?`,#0x1
        `OR`
            sub `Q4`,`Q5`,#0x1
            `START_OR`
                cpy r0,`Q2`
                add r1,`Q2`,#0x1
            `OR`
                add r1,`Q2`,#0x1
                cpy r0,`Q2`
            `END_OR`
        `END_OR`
    `OR`
        sub `Q4`,`Q5`,#0x1
        cpy r2,`Q3`
        add r1,`Q2`,#0x1
        cpy r0,`Q2`
    `END_OR`
    bl `*`

    ; check whether len is 0
    cmp `Q4`,#0x0
    beq `*`

    ; len--
    sub `Q6/r..?`,`Q4`,#0x1

    ; new_path[strlen(new_path) - 1] == '\"'
    ldrb `Q7/r..?`,[`Q2`,`Q6`]
    cmp `Q7`,#0x22

    `ANY_BYTES{0,4}`

    ; put 0 in new_path[strlen(new_path) - 1] if above true
    moveq `Q7`,#0x0
`OR`
    ; new_path[0] == '\"'
    `START_OR`
        ldrsb `Q1`,[`Q2`,#0x0]
    `OR`
        ldrb `Q1`,[`Q2`,#0x0]
    `END_OR`
    `ANY_BYTES{0,4}`
    cmp `Q1`,#0x22

    `ANY_BYTES{0,8}`

    ; check whether len is 0
    cmp `Q4`,#0x0
    `START_OR`
        bne `*`
    `OR`
        beq `*`
    `END_OR`

    `ANY_BYTES{0,56}`

    ; len--
    sub `Q6`,`Q4`,#0x1

    `ANY_BYTES{0,4}`

    ; new_path[strlen(new_path) - 1] == '\"'
    `START_OR`
        ldrsb `Q7`,[`Q2`,`Q6`]
    `OR`
        ldrb `Q7`,[`Q2`,`Q6`]
    `END_OR`
    cmp `Q7`,#0x22

    `ANY_BYTES{68,136}`

    ; call memmove and len--
    cpy r2,r0
    `START_OR`
        sub `Q4`,`Q5`,#0x1
        add r1,`Q2`,#0x1
        cpy r0,`Q2`
        bl `*`
    `OR`
        add r1,`Q2`,#0x1
        cpy r0,`Q2`
        `START_OR`
            bl `*`
            sub `Q4`,`Q5`,#0x1
        `OR`
            sub `Q4`,`Q5`,#0x1
            bl `*`
        `END_OR`
    `END_OR`
`END_OR`

; Copyright (C) 2023 The MITRE Corporation All Rights Reserved
