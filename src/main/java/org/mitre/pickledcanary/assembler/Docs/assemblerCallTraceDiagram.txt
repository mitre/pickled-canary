@startuml

'nodes
package TopLevel {
  object "1 SleighAssembler" as resolveLine1 {
    resolveLine()
  }
  object "2 SleighAssembler" as parseLine2 {
    parseLine()
  }
  object "3 SleighAssembler" as resolveTree3 {
    resolveTree()
  }
  object "4 AssemblyTreeResolver" as constructor4 {
    constructor
  }
  object "5 AssemblyOperandData" as buildAssemblyOperandDataTree5 #lightblue {
    buildAssemblyOperandDataTree()
  }
  object "6 AssemblyTreeResolver" as resolve6 #orange {
    resolve()
  }
}
note bottom of buildAssemblyOperandDataTree5
  Blue backgrounds indicate
  this is a new method to the
  assembler
end note
note top of resolve6
  Orange backgrounds indicate
  this is a method that has
  important modifications to
  support suboperands for
  Pickled Canary
end note

package StateGeneratorPath {
  object "7 AssemblyConstructStateGenerator" as generate7 {
    generate()
  }
  object "8 AssemblyConstructStateGenerator" as applyConstructor8 {
    applyConstructor()
  }
  object "9 AssemblyConstructStateGenerator" as applyOperands9 {
    applyOperands()
  }
  object "10 AssemblyConstructStateGenerator" as applyRemainingOperands10 {
    applyRemainingOperands()
  }
  object "11 AssemblyOperandStateGenerator" as generate11 {
    generate()
  }
}
note bottom of StateGeneratorPath
  StateGeneratorPath takes in
  AssemblyParseBranch tree
  and returns AbstractAssemblyState
  tree
  
  Important AbstractAssemblyState
  subclasses include:
  - AssemblyConstructState
  - AssemblyOperandState
end note

package OperandAssemblerPath {
  object "12 AssemblyConstructState" as resolve12 {
    resolve()
  }
  object "13 AssemblyConstructState" as resolveRemainingChildren13 {
    resolveRemainingChildren()
  }
  object "14 AssemblyOperandState" as resolve14 #orange {
    resolve()
  }
  object "15 AssemblyOperandState" as solveNumeric15 {
    solveNumeric()
  }
}
note bottom of OperandAssemblerPath
  OperandAssemblerPath takes
  in AbstractAssemblyState
  and returns AssemblyResolution,
  which is returned to user
  after going through the rest of
  the paths
  
  Important AssemblyResolution
  subclasses include:
  - AssemblyResolvedPatterns
  - AssemblyResolvedBackfills
end note

package BitAssemblyPath {
  object "16 AssemblyTreeResolver" as solveOrBackfill16 {
    solveOrBackfill()
  }
  object "17 AssemblyTreeResolver" as solveOrBackfill17 {
    solveOrBackfill()
  }
  object "18 RecursiveDecentSolver" as solve18 {
    solve()
  }
  object "19 RecursiveDecentSolver" as solve19 {
    solve()
  }
  object "20 OperandValueSolver" as solve20 {
    solve()
  }
  object "21 TokenFieldSolver" as solve21 {
    solve()
  }
  object "22 AssemblyPatternBlock" as fromTokenField22 {
    fromTokenField()
  }
}

package RootAssemblerPath {
  object "23 AssemblyTreeResolver" as resolveRootRecursion23 {
    resolveRootRecursion()
  }
  object "24 AssemblyTreeResolver" as applyRecursionPath24 #orange {
    applyRecursionPath()
  }
  object "25 AssemblyTreeResolver" as resolvePatterns25 {
    resolvePatterns()
  }
  object "26 AssemblyTreeResolver" as applyMutations26 {
    applyMutations()
  }
  object "27 AssemblyConstructorSemantic" as solveContextChanges27 {
    solveContextChanges()
  }
}

package BackfillsPath {
  object "28 AssemblyTreeResolver" as resolvePendingBackfills28 {
    resolvePendingBackfills()
  }
  object "29 AssemblyResolvedPatterns" as backfill29 {
    backfill()
  }
  object "30 AssemblyResolvedBackfills" as solve30 #orange {
    solve()
  }
}

package FinalizationPath {
  object "31 AssemblyTreeResolver" as fillMasksVals31 #lightblue {
    fillMasksVals()
  }
  object "32 AssemblyOperandData" as applyShifts32 #lightblue {
    applyShifts()
  }
  object "33 AssemblyOperandData" as fillMissingMasksVals33 #lightblue {
    fillMissingMasksVals()
  }
}

' edges
' top level
resolveLine1 --> parseLine2
resolveLine1 --> resolveTree3
resolveTree3 --> constructor4
constructor4 --> buildAssemblyOperandDataTree5
resolveTree3 --> resolve6

' state generator path
resolve6 -[#red]-> generate7
generate7 -[#red]-> applyConstructor8
applyConstructor8 -[#red]-> applyOperands9
applyOperands9 -[#red]-> applyRemainingOperands10
applyRemainingOperands10 -[#red]-> applyRemainingOperands10
applyRemainingOperands10 -[#red]-> generate7
applyRemainingOperands10 -[#red]-> generate11
generate11 .[#red].> resolve12
note on link
  Dotted lines point
  to the next branch
  assembler proceeds
  to after returning
  to Method 6
end note

' operand assembler path
resolve6 -[#green]-> resolve12
resolve12 -[#green]-> resolveRemainingChildren13
resolveRemainingChildren13 -[#green]-> resolve12
resolveRemainingChildren13 -[#green]-> resolve14
resolve14 -[#green]-> solveNumeric15
solveNumeric15 -[#lightgreen]-> solveOrBackfill16
solveOrBackfill16 -[#lightgreen]-> solveOrBackfill17
solveOrBackfill17 -[#lightgreen]-> solve18
solve18 -[#lightgreen]-> solve19
solve19 -[#lightgreen]-> solve21
solve21 -[#lightgreen]-> fromTokenField22
fromTokenField22 .[#lightgreen].> resolveRootRecursion23

' root assembler path
resolve6 -[#blue]-> resolveRootRecursion23
resolveRootRecursion23 -[#blue]-> applyRecursionPath24
applyRecursionPath24 -[#blue]-> resolvePatterns25
resolvePatterns25 -[#blue]-> applyMutations26
applyMutations26 -[#blue]-> solveContextChanges27
solveContextChanges27 -[#lightblue]-> solveOrBackfill17
solveOrBackfill17 -[#lightblue]-> solve18
solve18 -[#lightblue]-> solve19
solve19 -[#lightblue]-> solve20
solve20 -[#lightblue]-> solve19
solve19 -[#lightblue]-> solve21
solve21 -[#lightblue]-> fromTokenField22
fromTokenField22 .[#lightblue].> resolvePendingBackfills28

' backfills path
resolve6 -[#purple]-> resolvePendingBackfills28
resolvePendingBackfills28 -[#purple]-> backfill29
backfill29 -[#purple]-> solve30
solve30 -[#917AA6]-> solve18
solve18 -[#917AA6]-> solve19
solve19 -[#917AA6]-> solve20
solve20 -[#917AA6]-> solve19
solve19 -[#917AA6]-> solve21
solve21 -[#917AA6]-> fromTokenField22
fromTokenField22 .[#917AA6].> fillMasksVals31

' finalization path
resolve6 -[#pink]-> fillMasksVals31
fillMasksVals31 -[#pink]-> applyShifts32
fillMasksVals31 -[#pink]-> fillMissingMasksVals33

@enduml