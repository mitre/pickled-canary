; This pattern tests for versions of libcurl before code for CVE-2019-3823 existed.
; Pattern written for x86:LE:64:default.

; Info about the CVE: https://github.com/curl/curl/commit/39df4073e5413fcdbb5a38da0c1ce6f1c0ceb484
; Summary: This CVE involves a buffer overflow vulnerability while using the strtol function. A
; string is passed into the strtol function, but if no null terminator is present within the
; string's buffer, strtol will overread the buffer.

; Prevulnerable code:
; Version 7.21.3 - 7.33.0
;   if((result = (line[3] == ' ')) != 0)
;    *resp = curlx_sltosi(strtol(line, NULL, 10));
; ...
;   if(len >= 5 && !memcmp(line, "AUTH ", 5))

; Pattern written with: libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4_OceanStor BCManager V200R001C00SPC220__1.action.16f41eb05d826e68ec793247c65ede64ce2ff854e2409379e438e8fe3b18bb24
;        0013d978 80 7b 03 20     CMP        byte ptr [RBX + 0x3],0x20
;...
;                             LAB_0013d99a
;        0013d99a 31 c9           XOR        ECX,ECX
;        0013d99c ba 0a 00        MOV        EDX,0xa
;                 00 00
;        0013d9a1 31 f6           XOR        ESI,ESI
;        0013d9a3 48 89 df        MOV        RDI,RBX
;        0013d9a6 e8 a5 ad        CALL       <EXTERNAL>::__strtol_internal
;                 fc ff
;        0013d9ab 48 89 c7        MOV        RDI,RAX
;        0013d9ae e8 3d 2e        CALL       FUN_001407f0
;                 00 00
; ...
;        0013da0b ba 05 00        MOV        EDX,0x5
;                 00 00
;        0013da10 48 8d 3d        LEA        RDI,[s_AUTH_001553d3]
;                 bc 79 01 00
;        0013da17 4c 89 ce        MOV        RSI,R9
;        0013da1a fc              CLD

; check line[3] == ' '
CMP byte ptr [`Q1/R..` + 0x3],0x20

`ANY_BYTES{0,40}`

; load arguments to strtol
`START_OR`
    MOV `Q2/.DX`,0xa
    XOR `Q3/.SI`,`Q3`
`OR`
    XOR `Q3`,`Q3`
    MOV `Q2`,0xa
`END_OR`

`ANY_BYTES{0,3}`

; call strtol
CALL `*`

; load arguments into curlx_sltosi
MOV RDI,RAX

; call curlx_sltosi
CALL `*`

;`ANY_BYTES{0,93}`
`ANY_BYTES{85,100}`

; load arguments to memcmp and call it
; this call to memcmp exists only before the vulnerability exists (version < 7.34)
; and helps distinguish this code from the other similar piece of code that calls
; strlen and curlx_sltosi

MOV EDX,0x5

`ANY_BYTES{0,8}`
MOV `Q4/.SI`,`Q5/R.`
CLD


; Copyright (C) 2025 The MITRE Corporation All Rights Reserved
