; This pattern tests for versions of libcurl before code for CVE-2019-3823 existed.
; Pattern written for ARM:LE:32:default.

; Info about the CVE: https://github.com/curl/curl/commit/39df4073e5413fcdbb5a38da0c1ce6f1c0ceb484
; Summary: This CVE involves a buffer overflow vulnerability while using the strtol function. A
; string is passed into the strtol function, but if no null terminator is present within the
; string's buffer, strtol will overread the buffer.

; Prevulnerable code:
; Version 7.21.3 - 7.33.0
;   if((result = (line[3] == ' ')) != 0)
;    *resp = curlx_sltosi(strtol(line, NULL, 10));
; ...
;   if(len >= 5 && !memcmp(line, "AUTH ", 5))

; Pattern written with: 1) libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.2.0_3.0.0.4.382.51641_Global.zip.0e5896dd52fc8672b0abc4ab66c16166b043965f5b26a4555ff594ebaa88d812_1
;        000479c8 03 30 d4 e5     ldrb       r3,[r4,#0x3]
;        000479cc 20 00 53 e3     cmp        r3,#0x20
; ...
;        00047a10 01 10 8a e0     add        r1=>s_AUTH_000539ac,r10,r1
;        00047a14 05 20 a0 e3     mov        r2,#0x5
;        00047a18 3d 44 ff eb     bl         <EXTERNAL>::memcmp
; ...
;                             LAB_00047b88
;        00047b88 00 10 a0 e3     mov        r1,#0x0
;        00047b8c 0a 20 a0 e3     mov        r2,#0xa
;        00047b90 04 00 a0 e1     cpy        r0,r4
;        00047b94 79 42 ff eb     bl         <EXTERNAL>::strtol
;        00047b98 eb 44 ff eb     bl         curlx_sltosi
;        00047b9c 00 00 86 e5     str        r0,[r6,#0x0]
;        00047ba0 8e ff ff ea     b          LAB_000479e0

; and 2) libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.2.0_3.0.0.4.382.51641_Global.zip.0e5896dd52fc8672b0abc4ab66c16166b043965f5b26a4555ff594ebaa88d812
;        00049dfc 03 90 d8 e5     ldrb       r9,[r8,#0x3]
;        00049e00 20 00 59 e3     cmp        r9,#0x20
; ...
;        00049e40 05 20 a0 e3     mov        r2,#0x5
;        00049e44 01 10 87 e0     add        r1=>s_AUTH_00054070,r7,r1                        = "AUTH "
;        00049e48 36 3b ff eb     bl         <EXTERNAL>::memcmp                               int memcmp(void * __s1, void * _
; ...
;                             LAB_0004a06c                                    XREF[1]:     00049e10(j)
;        0004a06c 00 10 a0 e3     mov        r1,#0x0
;        0004a070 0a 20 a0 e3     mov        r2,#0xa
;        0004a074 08 00 a0 e1     cpy        r0,r8
;        0004a078 34 38 ff eb     bl         <EXTERNAL>::strtol                               long strtol(char * __nptr, char
;        0004a07c 63 38 ff eb     bl         curlx_sltosi                                     undefined curlx_sltosi()

; check line[3] == ' '
ldrb `Q1/r.`,[`Q2/r.`,#0x3]
cmp `Q1`,#0x20

`ANY_BYTES{0,68}`

; load arguments to memcmp and call it
; this call to memcmp exists only before the vulnerability exists (version < 7.34)
; and helps distinguish this code from the other similar piece of code that calls
; strlen and curlx_sltosi
`START_OR`
    add r1,`Q5/r.*`,`Q6/r.`
    mov r2,#0x5
`OR`
    mov r2,#0x5
    add r1,`Q5`,`Q6`
`END_OR`
bl `*`

`ANY_BYTES{0,548}`

; load arguments to strtol
`START_OR`
    mov r1,#0x0
    mov r2,#0xa
`OR`
    mov r2,#0xa
    mov r1,#0x0
`END_OR`

`ANY_BYTES{0,4}`

; call strtol
bl `*`

; call curlx_sltosi
bl `*`


; Copyright (C) 2025 The MITRE Corporation All Rights Reserved
