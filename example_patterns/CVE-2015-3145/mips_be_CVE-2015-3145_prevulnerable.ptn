; This pattern tests for the absence of CVE-2015-3145 and its fix for MIPS:BE:32:default.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; CVE-2015-3145 was introduced in v7.31.0 when the sanitize_cookie_path() function was added in
; cookie.c and when the spath field was added in the Cookie struct in cookie.h. Even though the
; vulnerability itself is located in sanitize_cookie_path(), we can check whether the vulnerability
; had been introduced yet by checking for the presence (or lack of) the spath field.

; The cookie.c file contains a freecookie() function which frees several values in the Cookie
; struct. We can check how many times free is called - eight times before spath was added, nine
; times after spath was added.

; Prevulnerable code:
; // notice co->spath is missing, as it has not been introduced to the code yet
; static void freecookie(struct Cookie *co)
; {
;   if(co->expirestr)
;     free(co->expirestr);
;   if(co->domain)
;     free(co->domain);
;   if(co->path)
;     free(co->path);
;   if(co->name)
;     free(co->name);
;   if(co->value)
;     free(co->value);
;   if(co->maxage)
;     free(co->maxage);
;   if(co->version)
;     free(co->version);
;
;   free(co);
; }

; Pattern written with: libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.3.0_V1.00(AAKG.12)C0.zip.1e4e2676fe5e1ac9cd0aa8ae672d2995fc4aa9f0a6512b8f12b4ac92f55ebb42
;        00018950 3c 1c 00 05     lui        gp,0x5
;        00018954 27 9c 46 30     addiu      gp,gp,0x4630
;        00018958 03 99 e0 21     addu       gp,gp,t9
;        0001895c 27 bd ff e0     addiu      sp,sp,-0x20
;        00018960 af bc 00 10     sw         gp=>_gp_1,local_10(sp)
;        00018964 af b0 00 18     sw         s0,local_8(sp)
;        00018968 00 80 80 21     move       s0,a0
;        0001896c af bf 00 1c     sw         ra,local_4(sp)
;        00018970 8c 84 00 20     lw         a0,0x20(a0)
;        00018974 10 80 00 05     beq        a0,zero,LAB_0001898c
;        00018978 8f 82 80 2c     _lw        v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        0001897c 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        00018980 03 20 f8 09     jalr       t9=><EXTERNAL>::free
;        00018984 00 00 00 00     _nop
;        00018988 8f bc 00 10     lw         gp,local_10(sp)
;                             LAB_0001898c
;        0001898c 8e 04 00 10     lw         a0,0x10(s0)
;        00018990 10 80 00 05     beq        a0,zero,LAB_000189a8
;        00018994 8f 82 80 2c     _lw        v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        00018998 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        0001899c 03 20 f8 09     jalr       t9=><EXTERNAL>::free
;        000189a0 00 00 00 00     _nop
;        000189a4 8f bc 00 10     lw         gp,local_10(sp)
;                             LAB_000189a8
;        000189a8 8e 04 00 0c     lw         a0,0xc(s0)
;        000189ac 10 80 00 05     beq        a0,zero,LAB_000189c4
;        000189b0 8f 82 80 2c     _lw        v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        000189b4 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        000189b8 03 20 f8 09     jalr       t9=><EXTERNAL>::free
;        000189bc 00 00 00 00     _nop
;        000189c0 8f bc 00 10     lw         gp,local_10(sp)
;                             LAB_000189c4
;        000189c4 8e 04 00 04     lw         a0,0x4(s0)
;        000189c8 10 80 00 05     beq        a0,zero,LAB_000189e0
;        000189cc 8f 82 80 2c     _lw        v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        000189d0 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        000189d4 03 20 f8 09     jalr       t9=><EXTERNAL>::free
;        000189d8 00 00 00 00     _nop
;        000189dc 8f bc 00 10     lw         gp,local_10(sp)
;                             LAB_000189e0
;        000189e0 8e 04 00 08     lw         a0,0x8(s0)
;        000189e4 10 80 00 05     beq        a0,zero,LAB_000189fc
;        000189e8 8f 82 80 2c     _lw        v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        000189ec 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        000189f0 03 20 f8 09     jalr       t9=><EXTERNAL>::free
;        000189f4 00 00 00 00     _nop
;        000189f8 8f bc 00 10     lw         gp,local_10(sp)
;                             LAB_000189fc
;        000189fc 8e 04 00 2c     lw         a0,0x2c(s0)
;        00018a00 10 80 00 05     beq        a0,zero,LAB_00018a18
;        00018a04 8f 82 80 2c     _lw        v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        00018a08 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        00018a0c 03 20 f8 09     jalr       t9=><EXTERNAL>::free
;        00018a10 00 00 00 00     _nop
;        00018a14 8f bc 00 10     lw         gp,local_10(sp)
;                             LAB_00018a18
;        00018a18 8e 04 00 28     lw         a0,0x28(s0)
;        00018a1c 10 80 00 05     beq        a0,zero,LAB_00018a34
;        00018a20 8f 82 80 2c     _lw        v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        00018a24 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        00018a28 03 20 f8 09     jalr       t9=><EXTERNAL>::free
;        00018a2c 00 00 00 00     _nop
;        00018a30 8f bc 00 10     lw         gp,local_10(sp)
;                             LAB_00018a34
;        00018a34 8f 82 80 2c     lw         v0,-0x7fd4(gp)=>PTR_PTR_free_00064fac
;        00018a38 02 00 20 21     move       a0,s0
;        00018a3c 8f bf 00 1c     lw         ra,local_4(sp)
;        00018a40 8f b0 00 18     lw         s0,local_8(sp)
;        00018a44 8c 59 00 00     lw         t9,0x0(v0)=>-><EXTERNAL>::free
;        00018a48 03 20 00 08     jr         t9=><EXTERNAL>::free

; start of freecookie() function
lui gp,`*`

`ANY_BYTES{0, 44}`

; each jalr calls free

beq a0,zero,`*`
`ANY_BYTES{0,16}`
jalr `*`
`ANY_BYTES{0,20}`

beq a0,zero,`*`
`ANY_BYTES{0,16}`
jalr `*`
`ANY_BYTES{0,20}`

beq a0,zero,`*`
`ANY_BYTES{0,16}`
jalr `*`
`ANY_BYTES{0,20}`

beq a0,zero,`*`
`ANY_BYTES{0,16}`
jalr `*`
`ANY_BYTES{0,20}`

beq a0,zero,`*`
`ANY_BYTES{0,16}`
jalr `*`
`ANY_BYTES{0,20}`

beq a0,zero,`*`
`ANY_BYTES{0,16}`
jalr `*`
`ANY_BYTES{0,20}`

beq a0,zero,`*`
`ANY_BYTES{0,16}`
jalr `*`
`ANY_BYTES{0,36}`

jr `*`

; Copyright (C) 2025 The MITRE Corporation All Rights Reserved
