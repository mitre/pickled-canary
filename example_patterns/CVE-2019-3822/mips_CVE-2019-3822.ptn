; MIPS CVE-2019-3822

; This tests for code prior to the fix at:
; https://github.com/curl/curl/commit/50c9484278c63b958655a717844f0721263939cc

; the condition "if (size < (0x400 - ntresplen))" is vulnerable to an integer overflow
; specifically if ntresplen is greater than 0x400


; 00040a90 8f  a2  00  fc    lw         v0,local_8dc (sp)
; 00040a94 24  04  04  00    li         param_1 ,0x400
; 00040a98 00  82  20  23    subu       param_1 ,param_1 ,v0
; 00040a9c 00  64  20  2b    sltu       param_1 ,v1,param_1
; 00040aa0 14  80  00  b2    bne        param_1 ,zero ,LAB_000

; attempt at an additional line is here but it doesn't autocomplete "lw v0,0xfc(sp)" which is what we want
; we need some way to interpret "*" as "all bytes in this space are allowed"
;lw `Q1/..r?o?/.*[,(]`,`*/.*\(sp\)/(.*,)|(.*\([^s])`
; same problem with bne with its last operand (the branch target)

; so we have to make do with a less specific pattern
; also we can't use Q1 twice in the same instruction
; so for subu and sltu we need to pick only one and make the rest *'s
; the resulting pattern is 200KB and very generic...

; START OF PATTERN:

; Q1 is any register (including zero)
li `Q1/..r?o?`,0x400

; * is any register (including zero)
subu `Q1`,`Q1`,`*/..r?o?`

sltu `Q1`,`*`,`Q1`
