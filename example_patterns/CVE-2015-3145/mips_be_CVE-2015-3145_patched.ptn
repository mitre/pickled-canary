; This pattern tests for the patch of CVE-2015-3145 for MIPS:BE:32:default.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; Patched code:
; len = strlen(new_path);
; if(new_path[0] == '\"') {
;   memmove((void *)new_path, (const void *)(new_path + 1), len);
;   len--;
; }
; if(len && (new_path[len - 1] == '\"')) {
;   new_path[len - 1] = 0x0;
;   len--;
; }

; Pattern written with: 1) libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.5.0_V1.00(ABMY.7)C0.zip.d86bf6a2bbbef5ff911dab3da77439e6a1dd02ba8a1c257ebf77d843f46922ea
;        0001a944 03 20 f8 09     jalr       t9=><EXTERNAL>::strlen
;        0001a948 00 40 20 21     _move      a0,v0
;        0001a94c 82 03 00 00     lb         v1,0x0(s0)
;        0001a950 00 40 88 21     move       s1,v0
;        0001a954 24 02 00 22     li         v0,0x22
;        0001a958 10 62 00 34     beq        v1,v0,LAB_0001aa2c
;        0001a95c 8f bc 00 10     _lw        gp,local_18(sp)
;        0001a960 16 20 00 12     bne        s1,zero,LAB_0001a9ac
;        0001a964 26 22 ff ff     _addiu     v0,s1,-0x1
; ...
;                              LAB_0001a9ac
;        0001a9ac 02 02 18 21     addu       v1,s0,v0
;        0001a9b0 80 65 00 00     lb         a1,0x0(v1)
;        0001a9b4 24 04 00 22     li         a0,0x22
;        0001a9b8 14 a4 ff eb     bne        a1,a0,LAB_0001a968
;        0001a9bc 00 00 00 00     _nop
;        0001a9c0 a0 60 00 00     sb         zero,0x0(v1)
; ...
;                              LAB_0001aa2c
;        0001aa2c 8f 99 8c c0     lw         t9,-0x7340(gp)=>-><EXTERNAL>::memmove
;        0001aa30 02 20 30 21     move       a2,s1
;        0001aa34 02 00 20 21     move       a0,s0
;        0001aa38 26 05 00 01     addiu      a1,s0,0x1
;        0001aa3c 03 20 f8 09     jalr       t9=><EXTERNAL>::memmove
;        0001aa40 26 31 ff ff     _addiu     s1,s1,-0x1

; and 2) libcurl/libcurl_versions/from_tool/testdata/libcurl.so.5.4.0_3.9.3.7537.bin.de3ea486b7cbea778d09bd93ee1ab7fc213302a3861cadc575aa0704ffc94705
;        0001a178 03 20 f8 09     jalr       t9=><EXTERNAL>::strlen
;        0001a17c 24 12 00 22     _li        s2,0x22
;        0001a180 00 40 80 21     move       s0,v0
;        0001a184 82 22 00 00     lb         v0,0x0(s1)
;        0001a188 14 52 00 08     bne        v0,s2,LAB_0001a1ac
;        0001a18c 8f bc 00 10     _lw        gp,local_18(sp)
;        0001a190 8f 99 8a 8c     lw         t9,-0x7574(gp)=>-><EXTERNAL>::memmove
;        0001a194 02 00 30 21     move       a2,s0
;        0001a198 02 20 20 21     move       a0,s1
;        0001a19c 03 20 f8 09     jalr       t9=><EXTERNAL>::memmove
;        0001a1a0 26 25 00 01     _addiu     a1,s1,0x1
;        0001a1a4 8f bc 00 10     lw         gp,local_18(sp)
;        0001a1a8 26 10 ff ff     addiu      s0,s0,-0x1
;                             LAB_0001a1ac
;        0001a1ac 12 00 00 06     beq        s0,zero,LAB_0001a1c8
;        0001a1b0 02 30 18 21     _addu      v1,s1,s0
;        0001a1b4 80 62 ff ff     lb         v0,-0x1(v1)
;        0001a1b8 14 52 00 03     bne        v0,s2,LAB_0001a1c8
;        0001a1bc 00 00 00 00     _nop
;        0001a1c0 a0 60 ff ff     sb         zero,-0x1(v1)
;        0001a1c4 26 10 ff ff     addiu      s0,s0,-0x1

; call to strlen
jalr `*`

`START_OR`
    `ANY_BYTES{0,4}`

    ; new_path[0] == '\"'
    lb `Q1/v.`,0x0(`Q2/s.`)
    `ANY_BYTES{0,4}`
    li `Q3/v.`,0x22
    `ANY_BYTES{0,4}`
    beq `Q1`,`Q3`,`*`

    `ANY_BYTES{0,8}`

    ; len--
    addiu `Q4/v.`,`Q5/s.`,-0x1

    `ANY_BYTES{60,80}`

    ; new_path[strlen(new_path) - 1] == '\"'
    `START_OR`
        lb `Q6/a.`,0x0(`Q7/v.`)
        li `Q8/a.`,0x22
        bne `Q6`,`Q8`,`*`
    `OR`
        li `Q8`,0x22
        `ANY_BYTES{0,4}`
        lb `Q6`,0x0(`Q7`)
        bnel `Q6`,`Q8`,`*`
    `END_OR`

    `ANY_BYTES{0,4}`

    ; put 0 in new_path[strlen(new_path) - 1] if above true
    sb zero,0x0(`Q7`)

    `ANY_BYTES{68,120}`

    ; call memmove
    `START_OR`
        move a0,`Q10/s.`
        addiu a1,`Q10`,0x1
        jalr `*`
        ; len--
        addiu `Q9/s.`,`Q9`,-0x1
    `OR`
        addiu a1,`Q10`,0x1
        addiu `Q9`,`Q9`,-0x1
        jalr `*`
        move a0,`Q10`
    `END_OR`
`OR`
    ; new_path[0] == '\"'
    `START_OR`
        li `Q11/[sv].`,0x22
        `ANY_BYTES{0,4}`
        lb `Q1`,0x0(`Q2`)
    `OR`
        `ANY_BYTES{0,4}`
        lb `Q1`,0x0(`Q2`)
        `ANY_BYTES{0,8}`
        li `Q11`,0x22
    `END_OR`
    bne `Q1`,`Q11`,`*`

    `ANY_BYTES{0,12}`

    ; call memmove
    move a2,`Q9`
    move a0,`Q10`
    jalr `*`
    addiu a1,`Q10`,0x1

    `ANY_BYTES{0,4}`

    ; len --
    addiu `Q9`,`Q9`,-0x1

    ; check whether len is 0
    `START_OR`
        beq `Q9`,zero,`*`
    `OR`
        beql `Q9`,zero,`*`
    `END_OR`

    `ANY_BYTES{0,12}`

    ; new_path[strlen(new_path) - 1] == '\"'
    `START_OR`
        lb `Q12/v.`,-0x1(`Q7`)
        bne `Q12`,`Q11`,`*`
        `ANY_BYTES{0,4}`

        ; put 0 in new_path[strlen(new_path) - 1] if above true
        sb zero,-0x1(`Q7`)

        ; len--
        addiu `Q9`,`Q9`,-0x1
    `OR`
        `START_OR`
            lb `Q13/a.`,0x0(`Q7`)
            li `Q14/a.`,0x22
            bne `Q13`,`Q14`,`*`
        `OR`
            li `Q14`,0x22
            lb `Q13`,0x0(`Q7`)
            bnel `Q13`,`Q14`,`*`
        `END_OR`
        `ANY_BYTES{0,4}`
        sb zero, 0x0(`Q7`)
    `END_OR`

`END_OR`

; Copyright (C) 2025 The MITRE Corporation All Rights Reserved
