; This pattern tests for the presence of CVE-2015-3145 for MIPS:LE:32:default.

; Info about the CVE: https://github.com/curl/curl/commit/b5f947b8ac0e282c61c75b69cd5b9d37dafc6959
; Summary: A cookie path is passed into a function, and the first character is removed if it is a
; double quote. It then checks if the last character (strlen(new_path) - 1) is a double quote and
; sets the last character to 0 if so. If a single double quote is passed in as the cookie path, the
; last character's index would be calculated as -1.

; Vulnerable code:
; if(new_path[0] == '\"') {
;   memmove((void *)new_path, (const void *)(new_path + 1), strlen(new_path));
; }
; if(new_path[strlen(new_path) - 1] == '\"') { // (strlen(new_path) - 1) could be negative
;   new_path[strlen(new_path) - 1] = 0x0;
; }

; Pattern written with: libcurl/libcurl_versions/from_tool/testdata/libcurl.so.4.3.0_UN_170721.zip.90801e6a7bfa26bb61ee44ce46d662d1301e7240f727b4d90cf34cbeebcb6f36
;        00017d18 80 43 00 00     lb         v1,0x0(v0)
;        00017d1c 24 02 00 22     li         v0,0x22
;        00017d20 14 62 00 0b     bne        v1,v0,LAB_00017d50
;        00017d24 8f 99 84 a0     _lw        t9,-0x7b60(gp)=>-><EXTERNAL>::strlen
;        00017d28 03 20 f8 09     jalr       t9=><EXTERNAL>::strlen
;        00017d2c 02 00 20 21     _move      a0,s0
;        00017d30 26 05 00 01     addiu      a1,s0,0x1
;        00017d34 8f bc 00 10     lw         gp,local_18(sp)
;        00017d38 02 00 20 21     move       a0,s0
;        00017d3c 8f 99 86 8c     lw         t9,-0x7974(gp)=>-><EXTERNAL>::memmove
;        00017d40 03 20 f8 09     jalr       t9=><EXTERNAL>::memmove
;        00017d44 00 40 30 21     _move      a2,v0
;        00017d48 8f bc 00 10     lw         gp,local_18(sp)
;        00017d4c 8f 99 84 a0     lw         t9,-0x7b60(gp)=>-><EXTERNAL>::strlen
;                             LAB_00017d50
;        00017d50 03 20 f8 09     jalr       t9=><EXTERNAL>::strlen
;        00017d54 02 00 20 21     _move      a0,s0
;        00017d58 24 03 00 22     li         v1,0x22
;        00017d5c 24 42 ff ff     addiu      v0,v0,-0x1
;        00017d60 02 02 10 21     addu       v0,s0,v0
;        00017d64 80 44 00 00     lb         a0,0x0(v0)
;        00017d68 14 83 00 02     bne        a0,v1,LAB_00017d74
;        00017d6c 8f bc 00 10     _lw        gp,local_18(sp)
;        00017d70 a0 40 00 00     sb         zero,0x0(v0)

; new_path[0] == '\"'
lb `Q1/v.`,0x0(`Q2/v.`)
li `Q3/v.`,0x22
bne `Q1`,`Q3`,`*`

`ANY_BYTES{0,8}`

; call strlen
jalr `*`

; call memmove
move a0,`Q4/s.`
addiu a1,`Q4`,0x1
`ANY_BYTES{0,12}`
jalr `*`
move a2,`Q3`

`ANY_BYTES{0,12}`

; call strlen
jalr `*`

`ANY_BYTES{0,4}`

; new_path[strlen(new_path) - 1] == '\"'
li `Q5/v.`,0x22
addiu `Q6/v.`,`Q6`,-0x1
`ANY_BYTES{0,4}`
lb `Q8/a.`,0x0(`Q6`)
bne `Q8`,`Q5`,`*`

`ANY_BYTES{0,4}`

; put 0 in new_path[strlen(new_path) - 1] if above true
sb zero,0x0(`Q6`)

; Copyright (C) 2023 The MITRE Corporation All Rights Reserved
